/*
 COPYRIGHT 2015 ESRI
 
 TRADE SECRETS: ESRI PROPRIETARY AND CONFIDENTIAL
 Unpublished material - all rights reserved under the
 Copyright Laws of the United States and applicable international
 laws, treaties, and conventions.
 
 For additional information, contact:
 Environmental Systems Research Institute, Inc.
 Attn: Contracts and Legal Services Department
 380 New York Street
 Redlands, California, 92373
 USA
 
 email: contracts@esri.com
 */

#import "AGSObject.h"

@class AGSPolyline;

/*@file AGSPolylineBarrier.h */

/**  A polyline barrier to constrain routes
 
 Instances of this class represent a polyline barrier that can be used to constrain routes generated by `AGSRouteTask`.
 
 Barriers serve to temporarily restrict, add impedance (cost) to, and scale impedance on parts of the transportation network.
 
 @since 100
 @see http://desktop.arcgis.com/en/arcmap/latest/extensions/network-analyst/barriers.htm
 */
@interface AGSPolylineBarrier : AGSObject
NS_ASSUME_NONNULL_BEGIN

#pragma mark -
#pragma mark initializers

-(instancetype)init __attribute__((unavailable("init is not available.")));

/** Initialize the polyline barrier with provided geometry
 @param polyline defining the shape and location of the barrier
 @return Initialized polyline barrier
 @since 100
 */
-(instancetype)initWithPolyline:(AGSPolyline*)polyline;

/** Initialize the polyline barrier with provided geometry
 @param polyline defining the shape and location of the barrier
 @return Initialized polyline barrier
 @since 100
 */
+(instancetype)barrierWithPolyline:(AGSPolyline*)polyline;

#pragma mark -
#pragma mark properties

/**
 The shape and location of the barrier
 @since 100
 */
@property (nullable, nonatomic, strong, readwrite) AGSPolyline *geometry;

/** The type of the barrier, whether it fully restricts travel accross it, or merely increases the cost of travel
 @since 100
 */
@property (nonatomic, assign, readwrite) AGSBarrierType type;

#pragma mark -
#pragma mark methods

-(double)scaleFactorForCostAttribute:(NSString*)attributeName;
-(void)setScaleFactor:(double)scaleFactor forCostAttribute:(NSString*)attributeName;

NS_ASSUME_NONNULL_END
@end
